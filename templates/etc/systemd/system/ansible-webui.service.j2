# {{ ansible_managed }}
# ansibleguy.sw_ansible_webui

[Unit]
Description=Ansible WebUI
Requires=network.target
{% if AW_CONFIG.manage.webserver %}Wants=nginx.service{% endif %}

Documentation=https://webui.ansibleguy.net/en/latest/
Documentation=https://github.com/ansibleguy/webui

[Service]
{% if AW_CONFIG.log.cleanup | bool %}
ExecStartPre=/bin/bash -c 'echo "Cleaning old logs:" && find {{ AW_CONFIG.path.log }}/ -name "*.log" -type f -mtime +{{ AW_CONFIG.log.retention_days }}'
ExecStartPre=/bin/bash -c 'find {{ AW_CONFIG.path.log }}/ -name "*.log" -type f -mtime +{{ AW_CONFIG.log.retention_days }} -delete'
{% endif %}

{% if AW_CONFIG.manage.auto_upgrade | bool %}
ExecStartPre=/bin/bash -c 'echo "UPGRADING REQUIREMENTS.." && \
                           source {{ AW_CONFIG.path.venv }}/bin/activate && \
                           python3 -m pip install --upgrade -r {{ AW_HC.path_config }}/{{ AW_HC.file_requirements.pip }} && \
                           ansible-galaxy collection install --upgrade -r {{ AW_HC.path_config }}/{{ AW_HC.file_requirements.collections }} && \
                           ansible-galaxy role install --force -r {{ AW_HC.path_config }}/{{ AW_HC.file_requirements.roles }}'
{% endif %}

ExecStart=/bin/bash -c 'source {{ AW_CONFIG.path.venv }}/bin/activate && \
                        python3 -m {{ AW_HC.module_name }}'

ExecReload=/bin/kill -HUP $MAINPID
User={{ AW_HC.user }}
Group={{ AW_HC.user }}
Restart=on-failure
RestartSec=10s

Environment=PYTHONUNBUFFERED="1"
Environment=LANG="en_US.UTF-8"
Environment=LC_ALL="en_US.UTF-8"

EnvironmentFile="{{ AW_HC.path.config }}/{{ AW_HC.file.secret }}"
Environment=AW_DB="{{ AW_HC.path.config }}/{{ AW_HC.file.db }}"
Environment=AW_PATH_LOG="{{ AW_CONFIG.path.log }}"
Environment=AW_HOSTNAMES="{{ AW_CONFIG.config['AW_HOSTNAMES'] | ensure_list | join(',') }}"
{% if AW_CONFIG.manage.webserver | bool %}
Environment=AW_PROXY=1
{% endif %}

# user-provided config-vars
{% for var, value in config_vars.items() %}
{%   if var not in AW_HC.config_vars_managed %}
Environment={{ var }}="{{ value|replace('"', "'") }}"
{%   endif %}
{% endfor %}

{% if ansible_distribution_version == '10' %}
StandardOutput=syslog
StandardError=syslog
{% else %}
StandardOutput=journal
StandardError=journal
{% endif %}
SyslogIdentifier=semaphore

[Install]
WantedBy=multi-user.target
